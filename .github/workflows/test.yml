name: Tests

on:
  [push, pull_request]

defaults:
  run:
    shell: bash

jobs:
  unit-test:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11']
      fail-fast: false

    steps:

    - name: Obtain SasData source from git
      uses: actions/checkout@v1

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    ### Caching of pip downloads and local wheel builds
    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "name={$(pip cache dir)}" >> $GITHUB_OUTPUT

    - name: Obtain pip cache (Linux)
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.name }}
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/test.yml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-

    ### Installation of build-dependencies

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel setuptools
        python -m pip install -r requirements.txt

    ### Build and test sasdata

    - name: Build sasdata
      run: |
        # BUILD SASDATA
        python setup.py clean
        python setup.py build
        python -m pip install .

    ### Build documentation (if enabled)

    - name: Install doc-building dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        python -m pip install sphinx

    - name: Build sasdata docs (Ubuntu only)
      if: matrix.os == 'ubuntu-latest'
      run: |
        mkdir -p build/lib
        sphinx-apidoc -o docs/source/dev/generated/ -d 8 -H SasData build/lib
        sphinx-build -M html docs/source/ docs/build/

    - name: Test with pytest
      run: |
        python -m pytest -v -s test
